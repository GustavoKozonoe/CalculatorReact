{"version":3,"sources":["components/Display/Display.jsx","components/Button/Button.jsx","App.js","index.js"],"names":["Display","props","className","oldCalculation","numbers","Button","onClick","onClicar","symbol","style","backgroundColor","width","color","App","useState","Array","fill","setNumbers","subNumbers","setSubNumbers","chooseValues","newValue","length","result","pop","String","parseFloat","i","priorityOperations","op","includes","index","findIndex","type","undefined","splice","newArray","push","createBackupArray","toFixed","ReactDOM","render","document","getElementById"],"mappings":"4QAceA,EAXC,SAACC,GACb,OACI,8BACI,sBAAKC,UAAU,UAAf,UACI,6BAAKD,EAAME,iBACX,6BAAKF,EAAMG,gBCQZC,G,MAbA,SAACJ,GACZ,OACI,8BACI,wBAAQK,QAAS,WAETL,EAAMM,SAASN,EAAMO,SACtBC,MAAO,CAACC,gBAAiBT,EAAMS,iBAAmB,UAAWC,MAAOV,EAAMU,OAHjF,SAII,mBAAGF,MAAO,CAACG,MAAOX,EAAMW,OAAS,WAAjC,SAA8CX,EAAMO,eC0KrDK,G,MA3KH,SAACZ,GAEX,MAA8Ba,mBAASC,MAAMd,EAAMG,SAASY,KAAK,IAAjE,mBAAOZ,EAAP,KAAgBa,EAAhB,KACA,EAAoCH,mBAASC,MAAMd,EAAMG,SAASY,KAAK,KAAvE,mBAAOE,EAAP,KAAmBC,EAAnB,KAQMC,EAAe,SAACC,GAEpB,GAAiC,IAA9BjB,EAAQA,EAAQkB,OAAO,IAAgC,kBAAbD,EAE3CJ,EAAW,CAACI,SAGT,GAAiC,IAA9BjB,EAAQA,EAAQkB,OAAO,IAAgC,kBAAbD,EAEhC,MAAbA,GAEDJ,EAAW,GAAD,mBAAKb,GAAL,CAAciB,UAIvB,GAAgB,QAAbA,EACR,CACE,IAAIE,GAAsC,EAA7BnB,EAAQA,EAAQkB,OAAO,GACpClB,EAAQoB,MACRP,EAAW,GAAD,mBAAKb,GAAL,CAAcmB,UAErB,GAAuB,kBAAbF,GAA8D,kBAA9BjB,EAAQA,EAAQkB,OAAO,GAEpElB,EAAQoB,MACRP,EAAW,GAAD,mBAAKb,GAAL,CAAciB,UAErB,GAAuB,kBAAbA,GAA8D,kBAA9BjB,EAAQA,EAAQkB,OAAO,GACtE,CACE,IAAIC,EACJA,EAASE,OAAOrB,EAAQA,EAAQkB,OAAO,IAAMG,OAAOJ,GACpDjB,EAAQoB,MACRP,EAAW,GAAD,mBAAKb,GAAL,CAAcsB,WAAWH,WAEhC,GAAiC,MAA9BnB,EAAQA,EAAQkB,OAAO,GAC/B,CACE,IAAIC,EACJA,EAASE,OAAOrB,EAAQA,EAAQkB,OAAO,IAAM,IAAMG,OAAOJ,GAC1D,IAAI,IAAIM,EAAI,EAAGA,EAAI,EAAGA,IACpBvB,EAAQoB,MACVP,EAAW,GAAD,mBAAKb,GAAL,CAAcsB,WAAWH,WAGnCN,EAAW,GAAD,mBAAKb,GAAL,CAAciB,MAGtBO,EAAqB,SAACC,GAE1B,GAAGzB,EAAQ0B,SAASD,GACpB,CACE,IAAIE,EAAQ3B,EAAQ4B,WAAU,SAACC,GAAU,OAAOA,IAASJ,KACrDN,EAAS,OACWW,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,EACnCN,EAA6B,IAAnBnB,EAAQ2B,EAAM,GAAY3B,EAAQ2B,EAAM,QAEvBG,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK,SAEDG,IAArB9B,EAAQ2B,EAAM,IAA2B,SAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,SAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,SAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,SAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,EACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,QAEfG,IAArB9B,EAAQ2B,EAAM,IAA2B,MAAPF,IACxCN,EAASnB,EAAQ2B,EAAM,GAAK3B,EAAQ2B,EAAM,IAE5C3B,EAAQ+B,OAAOJ,EAAM,EAAE,GACvB3B,EAAQ2B,EAAM,GAAKR,IAsCvB,OACE,sBAAKrB,UAAU,OAAf,UACE,oBAAIA,UAAU,MAAd,wBACA,sBAAKA,UAAU,aAAf,UACE,8BACE,cAAC,EAAD,CAASE,QAASA,EAASD,eAAgBe,MAE7C,sBAAKhB,UAAU,UAAf,UACE,cAAC,EAAD,CAAQM,OAAO,IAAII,MAAM,QAAQF,gBAAgB,UAAUH,SAtI9C,WAEnB,IAAM6B,EAAWrB,MAAMd,EAAMG,SAASY,KAAK,GAC3CC,EAAWmB,MAoIL,cAAC,EAAD,CAAQ5B,OAAO,MAAMI,MAAM,QAAQL,SAAUa,IAC7C,cAAC,EAAD,CAAQZ,OAAO,IAAII,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAO,OAAID,SAAUa,IAE7B,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAO,OAAID,SAAUa,IAE7B,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAO,IAAID,SAAUa,IAE7B,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAQ,EAAGI,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAO,IAAID,SAAUa,IAE7B,qBAAKlB,UAAU,OAAf,SACE,cAAC,EAAD,CAAQM,OAAQ,EAAGI,MAAM,QAAQD,MAAM,UAAUJ,SAAUa,MAG7D,cAAC,EAAD,CAAQZ,OAAO,IAAII,MAAM,QAAQL,SAAUa,IAC3C,cAAC,EAAD,CAAQZ,OAAO,IAAII,MAAM,QAAQF,gBAAgB,UAAUH,SA1DjD,YATQ,WAGxB,IADA,IAAM6B,EAAWrB,MAAMd,EAAMG,SAASY,KAAK,IACnCW,EAAI,EAAGA,EAAIvB,EAAQkB,OAAQK,IACjCS,EAASC,KAAKjC,EAAQuB,IAExBR,EAAc,CAACiB,IAKfE,GACA,IAAI,IAAIX,EAAI,EAAGA,EAAIvB,EAAQkB,OAAQK,IAE9BvB,EAAQ0B,SAAS,KAElBF,EAAmB,KAGbxB,EAAQ0B,SAAS,SAAQ1B,EAAQ0B,SAAS,SAEhDF,EAAmB,QACnBA,EAAmB,UAKnBA,EAAmB,KACnBA,EAAmB,MAGvBX,EAAW,CAACS,WAAWtB,EAAQ,GAAGmC,QAAQ,eAuCxC,oBAAIrC,UAAU,MAAd,0CC3KNsC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.1a58596c.chunk.js","sourcesContent":["import React from 'react'\r\nimport './Display.css'\r\n\r\nconst Display = (props) => {\r\n    return(\r\n        <div>\r\n            <div className=\"display\">\r\n                <h2>{props.oldCalculation}</h2>\r\n                <h1>{props.numbers}</h1>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Display;","import React from 'react';\r\nimport './Button.css'\r\n\r\nconst Button = (props) => {\r\n    return(\r\n        <div>\r\n            <button onClick={() => \r\n                {\r\n                    props.onClicar(props.symbol)\r\n                }} style={{backgroundColor: props.backgroundColor || '#BBBBF2', width: props.width,}}>\r\n                <p style={{color: props.color || '#745FF2'}}>{props.symbol}</p>\r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Button;","import React, {useState} from 'react';\n\nimport Display from './components/Display/Display';\nimport Button from './components/Button/Button';\n\nimport './CSS/App.css';\n\n//git add . -> git commit -m 'mensagem' -> git push\n//npm start\nconst App = (props) => \n{\n  const [numbers, setNumbers] = useState(Array(props.numbers).fill(0))        // vetor que guardará os números da calculadora\n  const [subNumbers, setSubNumbers] = useState(Array(props.numbers).fill(\"\")) // vetor que guardará as operações anteriores\n\n  const cleanNumbers = () => // função que limpa o vetor da calculadora\n  { \n    const newArray = Array(props.numbers).fill(0)\n    setNumbers(newArray)\n  }\n  \n  const chooseValues = (newValue) => // Função que adiciona os números e as operações no vetor\n  { \n    if(numbers[numbers.length-1] === 0 && typeof newValue === \"number\")\n    { // IF que verifica se a ultima posição é igual a zero e se o novo elemento adicionado é um número\n      setNumbers([newValue])\n    }\n    \n    else if(numbers[numbers.length-1] === 0 && typeof newValue === \"string\")\n    { // IF que verifica se a ultima posição é igual a zero e se o novo elemento adicionado é uma string\n      if(newValue === \".\") \n      { // se a string for um '.', ele adiciona no vetor, senão for ele não adiciona\n        setNumbers([...numbers, newValue]) \n      }\n    }\n    \n    else if(newValue === '+/-')\n    { //IF para inverter o sinal do número\n      let result = numbers[numbers.length-1] * -1 // Multiplica o número por -1\n      numbers.pop() // Remove o valor antes de ser multiplicado\n      setNumbers([...numbers, result]) \n    }\n    else if(typeof newValue === \"string\" && typeof numbers[numbers.length-1] === \"string\")\n    { //IF para não deixar repetir dois tipos de operações, verificando o último valor do vetor e novo valor que será inserido\n      numbers.pop() // Remove a operação antiga\n      setNumbers([...numbers, newValue])\n    }\n    else if(typeof newValue === \"number\" && typeof numbers[numbers.length-1] === \"number\")\n    { //IF para caso tenha dois números seguidos, juntando os valores\n      let result = 0\n      result = String(numbers[numbers.length-1]) + String(newValue) // Transforma em string para poder juntar os números [7, 8] = [78]\n      numbers.pop() // Remove o número antigo [7,8] -> [78]\n      setNumbers([...numbers, parseFloat(result)])\n    }\n    else if(numbers[numbers.length-1] === \".\")\n    { //IF para juntar os números com ponto\n      let result = 0\n      result = String(numbers[numbers.length-2]) + '.' + String(newValue) // Junta os números [7,'.',8] -> [7.8]\n      for(let i = 0; i < 2; i++) // E limpa os valores repetidos do vetor\n        numbers.pop()\n      setNumbers([...numbers, parseFloat(result)])\n    }\n    else\n      setNumbers([...numbers, newValue])\n  }\n\n  const priorityOperations = (op) => // Função que recebe uma operação como parâmetro e realiza as contas na ordem correta\n  {\n    if(numbers.includes(op)) // IF que verifica se a operação está no vetor\n    {\n      let index = numbers.findIndex((type) => {return type === op}) // Acha o primeiro índice da operação recebida como parâmetro\n      let result = 0\n      if(numbers[index+1] !== undefined && op === '%')       // Caso a operação tenha todos os números (5 % 20 = 25)\n        result = (numbers[index-1] * 100) / numbers[index+1] // Fará a operação \n      \n      else if(numbers[index+1] === undefined && op === '%')  // Caso a operação não tenha o ultimo número da operação, será equivalente a fazer a operação só dividindo por 100\n        result = numbers[index-1] / 100                      // Fará a operação \n      \n      else if(numbers[index+1] !== undefined && op === '×')  // Caso a operação tenha todos os números (7 x 8 = 56)\n        result = numbers[index-1] * numbers[index+1]         // Fará a operação \n      \n      else if(numbers[index+1] === undefined && op === '×')  // Caso a operação não tenha o ultimo número da operação, será equivalente a fazer a operação por ele mesmo (7 x 7 = 49)\n        result = numbers[index-1] * numbers[index-1]         // Fará a operação \n      \n      else if(numbers[index+1] !== undefined && op === '÷')  // Caso a operação tenha todos os números (16 ÷ 8 = 2)\n        result = numbers[index-1] / numbers[index+1]         // Fará a operação \n      \n      else if(numbers[index+1] === undefined && op === '÷')  // Caso a operação não tenha o ultimo número da operação, será equivalente a fazer a operação por ele mesmo (7 ÷ 7 = 1)\n        result = numbers[index-1] / numbers[index-1]         // Fará a operação \n\n      else if(numbers[index+1] !== undefined && op === '+')  // Caso a operação tenha todos os números (16 + 8 = 24)\n        result = numbers[index-1] + numbers[index+1]         // Fará a operação \n      \n      else if(numbers[index+1] === undefined && op === '+')  // Caso a operação não tenha o ultimo número da operação, será equivalente a fazer a operação por ele mesmo (7 + 7 = 14)\n        result = numbers[index-1] + numbers[index-1]         // Fará a operação \n    \n      else if(numbers[index+1] !== undefined && op === '-')  // Caso a operação tenha todos os números (16 - 8 = 8)\n        result = numbers[index-1] - numbers[index+1]         // Fará a operação \n      \n      else if(numbers[index+1] === undefined && op === '-')  // Caso a operação não tenha o ultimo número da operação, será equivalente a fazer a operação por ele mesmo (7 - 7 = 0)\n        result = numbers[index-1] - numbers[index-1]         // Fará a operação \n    \n      numbers.splice(index-1,2)                              // Recorta do vetor todos os números envolvidos menos 1\n      numbers[index-1] = result                              // Troca o valor da operação que tinha sobrado pelo resultado da conta\n    }\n  }\n\n  const createBackupArray = () => // Função para salvar a antiga operação\n  {\n    const newArray = Array(props.numbers).fill(\"\")\n    for(let i = 0; i < numbers.length; i++)\n      newArray.push(numbers[i])\n    \n    setSubNumbers([newArray])\n  }\n  \n  const doTheMath = () => // Função que é chamada ao apertar o botão de igual (=)\n  {\n    createBackupArray()\n    for(let i = 0; i < numbers.length; i++)\n    {\n      if(numbers.includes('%')) // Já que porcentagem tem a prioridade sobre as outras, ela vai primeiro até não tiver mais nenhuma dela na conta \n      {\n        priorityOperations('%')\n        continue\n      }\n      else if(numbers.includes('×') || numbers.includes('÷')) // Após isso, multiplicação e divisão tem a prioridade\n      {\n        priorityOperations('×')\n        priorityOperations('÷')\n        continue\n      }\n      else // E por último, soma e subtração\n      {\n        priorityOperations('+') \n        priorityOperations('-')\n      }\n    }\n    setNumbers([parseFloat(numbers[0].toFixed(2))]) // Coloca o resultado final como único elemento do vetor e controlando as casas após a virgula\n  }\n\n  return (\n    <div className=\"main\">\n      <h1 className=\"ml2\">Calculator</h1>\n      <div className=\"Calculator\">\n        <div>\n          <Display numbers={numbers} oldCalculation={subNumbers} />\n        </div>\n        <div className=\"buttons\">\n          <Button symbol=\"C\" color=\"black\" backgroundColor=\"#745FF2\" onClicar={cleanNumbers} />\n          <Button symbol=\"+/-\" color=\"black\" onClicar={chooseValues} />\n          <Button symbol=\"%\" color=\"black\" onClicar={chooseValues} />\n          <Button symbol=\"÷\" onClicar={chooseValues} />\n\n          <Button symbol={7} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={8} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={9} color=\"black\" onClicar={chooseValues} />\n          <Button symbol='×' onClicar={chooseValues} />\n\n          <Button symbol={4} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={5} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={6} color=\"black\" onClicar={chooseValues} />\n          <Button symbol=\"-\" onClicar={chooseValues} />\n\n          <Button symbol={1} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={2} color=\"black\" onClicar={chooseValues} />\n          <Button symbol={3} color=\"black\" onClicar={chooseValues} />\n          <Button symbol=\"+\" onClicar={chooseValues} />\n          \n          <div className=\"zero\">\n            <Button symbol={0} color=\"black\" width=\"10.3rem\" onClicar={chooseValues} />\n          </div>\n\n          <Button symbol=\".\" color=\"black\" onClicar={chooseValues} />\n          <Button symbol=\"=\" color=\"black\" backgroundColor=\"#745FF2\" onClicar={doTheMath}  />\n        </div>\n      </div>\n      <h2 className=\"ml2\">Made by Gustavo Kozonoe</h2> \n    </div>\n  );\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './CSS/index.css';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}